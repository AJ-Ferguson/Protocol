package com.nukkitx.protocol.bedrock.v291.serializer;

import com.nukkitx.network.VarInts;
import com.nukkitx.protocol.bedrock.data.SoundEvent;
import com.nukkitx.protocol.bedrock.packet.LevelSoundEvent1Packet;
import com.nukkitx.protocol.bedrock.v291.BedrockUtils;
import com.nukkitx.protocol.serializer.PacketSerializer;
import com.nukkitx.protocol.util.TIntHashBiMap;
import io.netty.buffer.ByteBuf;
import lombok.AccessLevel;
import lombok.NoArgsConstructor;

import static com.nukkitx.protocol.bedrock.data.SoundEvent.*;

@NoArgsConstructor(access = AccessLevel.PRIVATE)
public class LevelSoundEventSerializer_v291 implements PacketSerializer<LevelSoundEvent1Packet> {
    public static final LevelSoundEventSerializer_v291 INSTANCE = new LevelSoundEventSerializer_v291();

    private static final TIntHashBiMap<SoundEvent> sounds = new TIntHashBiMap<>(2, 0.5F, 214, UNDEFINED);

    static {
        sounds.put(0, ITEM_USE_ON);
        sounds.put(1, HIT);
        sounds.put(2, STEP);
        sounds.put(3, FLY);
        sounds.put(4, JUMP);
        sounds.put(5, BREAK);
        sounds.put(6, PLACE);
        sounds.put(7, HEAVY_STEP);
        sounds.put(8, GALLOP);
        sounds.put(9, FALL);
        sounds.put(10, AMBIENT);
        sounds.put(11, AMBIENT_BABY);
        sounds.put(12, AMBIENT_IN_WATER);
        sounds.put(13, BREATHE);
        sounds.put(14, DEATH);
        sounds.put(15, DEATH_IN_WATER);
        sounds.put(16, DEATH_TO_ZOMBIE);
        sounds.put(17, HURT);
        sounds.put(18, HURT_IN_WATER);
        sounds.put(19, MAD);
        sounds.put(20, BOOST);
        sounds.put(21, BOW);
        sounds.put(22, SQUISH_BIG);
        sounds.put(23, SQUISH_SMALL);
        sounds.put(24, FALL_BIG);
        sounds.put(25, FALL_SMALL);
        sounds.put(26, SPLASH);
        sounds.put(27, FIZZ);
        sounds.put(28, FLAP);
        sounds.put(29, SWIM);
        sounds.put(30, DRINK);
        sounds.put(31, EAT);
        sounds.put(32, TAKEOFF);
        sounds.put(33, SHAKE);
        sounds.put(34, PLOP);
        sounds.put(35, LAND);
        sounds.put(36, SADDLE);
        sounds.put(37, ARMOR);
        sounds.put(38, MOB_ARMOR_STAND_PLACE);
        sounds.put(39, ADD_CHEST);
        sounds.put(40, THROW);
        sounds.put(41, ATTACK);
        sounds.put(42, ATTACK_NODAMAGE);
        sounds.put(43, ATTACK_STRONG);
        sounds.put(44, WARN);
        sounds.put(45, SHEAR);
        sounds.put(46, MILK);
        sounds.put(47, THUNDER);
        sounds.put(48, EXPLODE);
        sounds.put(49, FIRE);
        sounds.put(50, IGNITE);
        sounds.put(51, FUSE);
        sounds.put(52, STARE);
        sounds.put(53, SPAWN);
        sounds.put(54, SHOOT);
        sounds.put(55, BREAK_BLOCK);
        sounds.put(56, LAUNCH);
        sounds.put(57, BLAST);
        sounds.put(58, LARGE_BLAST);
        sounds.put(59, TWINKLE);
        sounds.put(60, REMEDY);
        sounds.put(61, UNFECT);
        sounds.put(62, LEVELUP);
        sounds.put(63, BOW_HIT);
        sounds.put(64, BULLET_HIT);
        sounds.put(65, EXTINGUISH_FIRE);
        sounds.put(66, ITEM_FIZZ);
        sounds.put(67, CHEST_OPEN);
        sounds.put(68, CHEST_CLOSED);
        sounds.put(69, SHULKERBOX_OPEN);
        sounds.put(70, SHULKERBOX_CLOSED);
        sounds.put(71, ENDERCHEST_OPEN);
        sounds.put(72, ENDERCHEST_CLOSED);
        sounds.put(73, POWER_ON);
        sounds.put(74, POWER_OFF);
        sounds.put(75, ATTACH);
        sounds.put(76, DETACH);
        sounds.put(77, DENY);
        sounds.put(78, TRIPOD);
        sounds.put(79, POP);
        sounds.put(80, DROP_SLOT);
        sounds.put(81, NOTE);
        sounds.put(82, THORNS);
        sounds.put(83, PISTON_IN);
        sounds.put(84, PISTON_OUT);
        sounds.put(85, PORTAL);
        sounds.put(86, WATER);
        sounds.put(87, LAVA_POP);
        sounds.put(88, LAVA);
        sounds.put(89, BURP);
        sounds.put(90, BUCKET_FILL_WATER);
        sounds.put(91, BUCKET_FILL_LAVA);
        sounds.put(92, BUCKET_EMPTY_WATER);
        sounds.put(93, BUCKET_EMPTY_LAVA);
        sounds.put(94, ARMOR_EQUIP_CHAIN);
        sounds.put(95, ARMOR_EQUIP_DIAMOND);
        sounds.put(96, ARMOR_EQUIP_GENERIC);
        sounds.put(97, ARMOR_EQUIP_GOLD);
        sounds.put(98, ARMOR_EQUIP_IRON);
        sounds.put(99, ARMOR_EQUIP_LEATHER);
        sounds.put(100, ARMOR_EQUIP_ELYTRA);
        sounds.put(101, RECORD_13);
        sounds.put(102, RECORD_CAT);
        sounds.put(103, RECORD_BLOCKS);
        sounds.put(104, RECORD_CHIRP);
        sounds.put(105, RECORD_FAR);
        sounds.put(106, RECORD_MALL);
        sounds.put(107, RECORD_MELLOHI);
        sounds.put(108, RECORD_STAL);
        sounds.put(109, RECORD_STRAD);
        sounds.put(110, RECORD_WARD);
        sounds.put(111, RECORD_11);
        sounds.put(112, RECORD_WAIT);
        sounds.put(113, STOP_RECORD); //Not really a sound
        sounds.put(114, FLOP);
        sounds.put(115, ELDERGUARDIAN_CURSE);
        sounds.put(116, MOB_WARNING);
        sounds.put(117, MOB_WARNING_BABY);
        sounds.put(118, TELEPORT);
        sounds.put(119, SHULKER_OPEN);
        sounds.put(120, SHULKER_CLOSE);
        sounds.put(121, HAGGLE);
        sounds.put(122, HAGGLE_YES);
        sounds.put(123, HAGGLE_NO);
        sounds.put(124, HAGGLE_IDLE);
        sounds.put(125, CHORUSGROW);
        sounds.put(126, CHORUSDEATH);
        sounds.put(127, GLASS);
        sounds.put(128, POTION_BREWED);
        sounds.put(129, CAST_SPELL);
        sounds.put(130, PREPARE_ATTACK);
        sounds.put(131, PREPARE_SUMMON);
        sounds.put(132, PREPARE_WOLOLO);
        sounds.put(133, FANG);
        sounds.put(134, CHARGE);
        sounds.put(135, CAMERA_TAKE_PICTURE);
        sounds.put(136, LEASHKNOT_PLACE);
        sounds.put(137, LEASHKNOT_BREAK);
        sounds.put(138, GROWL);
        sounds.put(139, WHINE);
        sounds.put(140, PANT);
        sounds.put(141, PURR);
        sounds.put(142, PURREOW);
        sounds.put(143, DEATH_MIN_VOLUME);
        sounds.put(144, DEATH_MID_VOLUME);
        sounds.put(145, IMITATE_BLAZE);
        sounds.put(146, IMITATE_CAVE_SPIDER);
        sounds.put(147, IMITATE_CREEPER);
        sounds.put(148, IMITATE_ELDER_GUARDIAN);
        sounds.put(149, IMITATE_ENDER_DRAGON);
        sounds.put(150, IMITATE_ENDERMAN);
        sounds.put(152, IMITATE_EVOCATION_ILLAGER);
        sounds.put(153, IMITATE_GHAST);
        sounds.put(154, IMITATE_HUSK);
        sounds.put(155, IMITATE_ILLUSION_ILLAGER);
        sounds.put(156, IMITATE_MAGMA_CUBE);
        sounds.put(157, IMITATE_POLAR_BEAR);
        sounds.put(158, IMITATE_SHULKER);
        sounds.put(159, IMITATE_SILVERFISH);
        sounds.put(160, IMITATE_SKELETON);
        sounds.put(161, IMITATE_SLIME);
        sounds.put(162, IMITATE_SPIDER);
        sounds.put(163, IMITATE_STRAY);
        sounds.put(164, IMITATE_VEX);
        sounds.put(165, IMITATE_VINDICATION_ILLAGER);
        sounds.put(166, IMITATE_WITCH);
        sounds.put(167, IMITATE_WITHER);
        sounds.put(168, IMITATE_WITHER_SKELETON);
        sounds.put(169, IMITATE_WOLF);
        sounds.put(170, IMITATE_ZOMBIE);
        sounds.put(171, IMITATE_ZOMBIE_PIGMAN);
        sounds.put(172, IMITATE_ZOMBIE_VILLAGER);
        sounds.put(173, BLOCK_END_PORTAL_FRAME_FILL);
        sounds.put(174, BLOCK_END_PORTAL_SPAWN);
        sounds.put(175, RANDOM_ANVIL_USE);
        sounds.put(176, BOTTLE_DRAGONBREATH);
        sounds.put(177, PORTAL_TRAVEL);
        sounds.put(178, ITEM_TRIDENT_HIT);
        sounds.put(179, ITEM_TRIDENT_RETURN);
        sounds.put(180, ITEM_TRIDENT_RIPTIDE_1);
        sounds.put(181, ITEM_TRIDENT_RIPTIDE_2);
        sounds.put(182, ITEM_TRIDENT_RIPTIDE_3);
        sounds.put(183, ITEM_TRIDENT_THROW);
        sounds.put(184, ITEM_TRIDENT_THUNDER);
        sounds.put(185, ITEM_TRIDENT_HIT_GROUND);
        sounds.put(186, DEFAULT);
        sounds.put(188, ELEMENT_CONSTRUCTOR_OPEN);
        sounds.put(189, ICE_BOMB_HIT);
        sounds.put(190, BALLOON_POP);
        sounds.put(191, LT_REACTION_ICE_BOMB);
        sounds.put(192, LT_REACTION_BLEACH);
        sounds.put(193, LT_REACTION_E_PASTE);
        sounds.put(194, LT_REACTION_E_PASTE2);
        sounds.put(199, LT_REACTION_FERTILIZER);
        sounds.put(200, LT_REACTION_FIREBALL);
        sounds.put(201, LT_REACTION_MG_SALT);
        sounds.put(202, LT_REACTION_MISC_FIRE);
        sounds.put(203, LT_REACTION_FIRE);
        sounds.put(204, LT_REACTION_MISC_EXPLOSION);
        sounds.put(205, LT_REACTION_MISC_MYSTICAL);
        sounds.put(206, LT_REACTION_MISC_MYSTICAL2);
        sounds.put(207, LT_REACTION_PRODUCT);
        sounds.put(208, SPARKLER_USE);
        sounds.put(209, GLOWSTICK_USE);
        sounds.put(210, SPARKLER_ACTIVE);
        sounds.put(211, CONVERT_TO_DROWNED);
        sounds.put(212, BUCKET_FILL_FISH);
        sounds.put(213, BUCKET_EMPTY_FISH);
        sounds.put(214, UNDEFINED);
    }

    @Override
    public void serialize(ByteBuf buffer, LevelSoundEvent1Packet packet) {
        buffer.writeByte(sounds.get(packet.getSound()));
        BedrockUtils.writeVector3f(buffer, packet.getPosition());
        VarInts.writeInt(buffer, packet.getExtraData());
        VarInts.writeInt(buffer, packet.getPitch());
        buffer.writeBoolean(packet.isBabySound());
        buffer.writeBoolean(packet.isRelativeVolumeDisabled());
    }

    @Override
    public void deserialize(ByteBuf buffer, LevelSoundEvent1Packet packet) {
        packet.setSound(sounds.get(buffer.readUnsignedByte()));
        packet.setPosition(BedrockUtils.readVector3f(buffer));
        packet.setExtraData(VarInts.readInt(buffer));
        packet.setPitch(VarInts.readInt(buffer));
        packet.setBabySound(buffer.readBoolean());
        packet.setRelativeVolumeDisabled(buffer.readBoolean());
    }
}
