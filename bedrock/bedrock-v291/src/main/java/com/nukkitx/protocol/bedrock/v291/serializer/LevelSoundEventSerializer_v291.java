package com.nukkitx.protocol.bedrock.v291.serializer;

import com.nukkitx.network.VarInts;
import com.nukkitx.protocol.bedrock.packet.LevelSoundEventPacket;
import com.nukkitx.protocol.bedrock.util.TIntHashBiMap;
import com.nukkitx.protocol.bedrock.v291.BedrockUtils;
import com.nukkitx.protocol.serializer.PacketSerializer;
import io.netty.buffer.ByteBuf;
import lombok.AccessLevel;
import lombok.NoArgsConstructor;

import static com.nukkitx.protocol.bedrock.packet.LevelSoundEventPacket.Sound;

@NoArgsConstructor(access = AccessLevel.PRIVATE)
public class LevelSoundEventSerializer_v291 implements PacketSerializer<LevelSoundEventPacket> {
    public static final LevelSoundEventSerializer_v291 INSTANCE = new LevelSoundEventSerializer_v291();

    private static final TIntHashBiMap<Sound> sounds = new TIntHashBiMap<>();

    static {
        sounds.put(0, Sound.ITEM_USE_ON);
        sounds.put(1, Sound.HIT);
        sounds.put(2, Sound.STEP);
        sounds.put(3, Sound.FLY);
        sounds.put(4, Sound.JUMP);
        sounds.put(5, Sound.BREAK);
        sounds.put(6, Sound.PLACE);
        sounds.put(7, Sound.HEAVY_STEP);
        sounds.put(8, Sound.GALLOP);
        sounds.put(9, Sound.FALL);
        sounds.put(10, Sound.AMBIENT);
        sounds.put(11, Sound.AMBIENT_BABY);
        sounds.put(12, Sound.AMBIENT_IN_WATER);
        sounds.put(13, Sound.BREATHE);
        sounds.put(14, Sound.DEATH);
        sounds.put(15, Sound.DEATH_IN_WATER);
        sounds.put(16, Sound.DEATH_TO_ZOMBIE);
        sounds.put(17, Sound.HURT);
        sounds.put(18, Sound.HURT_IN_WATER);
        sounds.put(19, Sound.MAD);
        sounds.put(20, Sound.BOOST);
        sounds.put(21, Sound.BOW);
        sounds.put(22, Sound.SQUISH_BIG);
        sounds.put(23, Sound.SQUISH_SMALL);
        sounds.put(24, Sound.FALL_BIG);
        sounds.put(25, Sound.FALL_SMALL);
        sounds.put(26, Sound.SPLASH);
        sounds.put(27, Sound.FIZZ);
        sounds.put(28, Sound.FLAP);
        sounds.put(29, Sound.SWIM);
        sounds.put(30, Sound.DRINK);
        sounds.put(31, Sound.EAT);
        sounds.put(32, Sound.TAKEOFF);
        sounds.put(33, Sound.SHAKE);
        sounds.put(34, Sound.PLOP);
        sounds.put(35, Sound.LAND);
        sounds.put(36, Sound.SADDLE);
        sounds.put(37, Sound.ARMOR);
        sounds.put(38, Sound.MOB_ARMOR_STAND_PLACE);
        sounds.put(39, Sound.ADD_CHEST);
        sounds.put(40, Sound.THROW);
        sounds.put(41, Sound.ATTACK);
        sounds.put(42, Sound.ATTACK_NODAMAGE);
        sounds.put(43, Sound.ATTACK_STRONG);
        sounds.put(44, Sound.WARN);
        sounds.put(45, Sound.SHEAR);
        sounds.put(46, Sound.MILK);
        sounds.put(47, Sound.THUNDER);
        sounds.put(48, Sound.EXPLODE);
        sounds.put(49, Sound.FIRE);
        sounds.put(50, Sound.IGNITE);
        sounds.put(51, Sound.FUSE);
        sounds.put(52, Sound.STARE);
        sounds.put(53, Sound.SPAWN);
        sounds.put(54, Sound.SHOOT);
        sounds.put(55, Sound.BREAK_BLOCK);
        sounds.put(56, Sound.LAUNCH);
        sounds.put(57, Sound.BLAST);
        sounds.put(58, Sound.LARGE_BLAST);
        sounds.put(59, Sound.TWINKLE);
        sounds.put(60, Sound.REMEDY);
        sounds.put(61, Sound.UNFECT);
        sounds.put(62, Sound.LEVELUP);
        sounds.put(63, Sound.BOW_HIT);
        sounds.put(64, Sound.BULLET_HIT);
        sounds.put(65, Sound.EXTINGUISH_FIRE);
        sounds.put(66, Sound.ITEM_FIZZ);
        sounds.put(67, Sound.CHEST_OPEN);
        sounds.put(68, Sound.CHEST_CLOSED);
        sounds.put(69, Sound.SHULKERBOX_OPEN);
        sounds.put(70, Sound.SHULKERBOX_CLOSED);
        sounds.put(71, Sound.ENDERCHEST_OPEN);
        sounds.put(72, Sound.ENDERCHEST_CLOSED);
        sounds.put(73, Sound.POWER_ON);
        sounds.put(74, Sound.POWER_OFF);
        sounds.put(75, Sound.ATTACH);
        sounds.put(76, Sound.DETACH);
        sounds.put(77, Sound.DENY);
        sounds.put(78, Sound.TRIPOD);
        sounds.put(79, Sound.POP);
        sounds.put(80, Sound.DROP_SLOT);
        sounds.put(81, Sound.NOTE);
        sounds.put(82, Sound.THORNS);
        sounds.put(83, Sound.PISTON_IN);
        sounds.put(84, Sound.PISTON_OUT);
        sounds.put(85, Sound.PORTAL);
        sounds.put(86, Sound.WATER);
        sounds.put(87, Sound.LAVA_POP);
        sounds.put(88, Sound.LAVA);
        sounds.put(89, Sound.BURP);
        sounds.put(90, Sound.BUCKET_FILL_WATER);
        sounds.put(91, Sound.BUCKET_FILL_LAVA);
        sounds.put(92, Sound.BUCKET_EMPTY_WATER);
        sounds.put(93, Sound.BUCKET_EMPTY_LAVA);
        sounds.put(94, Sound.ARMOR_EQUIP_CHAIN);
        sounds.put(95, Sound.ARMOR_EQUIP_DIAMOND);
        sounds.put(96, Sound.ARMOR_EQUIP_GENERIC);
        sounds.put(97, Sound.ARMOR_EQUIP_GOLD);
        sounds.put(98, Sound.ARMOR_EQUIP_IRON);
        sounds.put(99, Sound.ARMOR_EQUIP_LEATHER);
        sounds.put(100, Sound.ARMOR_EQUIP_ELYTRA);
        sounds.put(101, Sound.RECORD_13);
        sounds.put(102, Sound.RECORD_CAT);
        sounds.put(103, Sound.RECORD_BLOCKS);
        sounds.put(104, Sound.RECORD_CHIRP);
        sounds.put(105, Sound.RECORD_FAR);
        sounds.put(106, Sound.RECORD_MALL);
        sounds.put(107, Sound.RECORD_MELLOHI);
        sounds.put(108, Sound.RECORD_STAL);
        sounds.put(109, Sound.RECORD_STRAD);
        sounds.put(110, Sound.RECORD_WARD);
        sounds.put(111, Sound.RECORD_11);
        sounds.put(112, Sound.RECORD_WAIT);
        sounds.put(113, Sound.STOP_RECORD); //Not really a sound
        sounds.put(114, Sound.FLOP);
        sounds.put(115, Sound.ELDERGUARDIAN_CURSE);
        sounds.put(116, Sound.MOB_WARNING);
        sounds.put(117, Sound.MOB_WARNING_BABY);
        sounds.put(118, Sound.TELEPORT);
        sounds.put(119, Sound.SHULKER_OPEN);
        sounds.put(120, Sound.SHULKER_CLOSE);
        sounds.put(121, Sound.HAGGLE);
        sounds.put(122, Sound.HAGGLE_YES);
        sounds.put(123, Sound.HAGGLE_NO);
        sounds.put(124, Sound.HAGGLE_IDLE);
        sounds.put(125, Sound.CHORUSGROW);
        sounds.put(126, Sound.CHORUSDEATH);
        sounds.put(127, Sound.GLASS);
        sounds.put(128, Sound.POTION_BREWED);
        sounds.put(129, Sound.CAST_SPELL);
        sounds.put(130, Sound.PREPARE_ATTACK);
        sounds.put(131, Sound.PREPARE_SUMMON);
        sounds.put(132, Sound.PREPARE_WOLOLO);
        sounds.put(133, Sound.FANG);
        sounds.put(134, Sound.CHARGE);
        sounds.put(135, Sound.CAMERA_TAKE_PICTURE);
        sounds.put(136, Sound.LEASHKNOT_PLACE);
        sounds.put(137, Sound.LEASHKNOT_BREAK);
        sounds.put(138, Sound.GROWL);
        sounds.put(139, Sound.WHINE);
        sounds.put(140, Sound.PANT);
        sounds.put(141, Sound.PURR);
        sounds.put(142, Sound.PURREOW);
        sounds.put(143, Sound.DEATH_MIN_VOLUME);
        sounds.put(144, Sound.DEATH_MID_VOLUME);
        sounds.put(145, Sound.IMITATE_BLAZE);
        sounds.put(146, Sound.IMITATE_CAVE_SPIDER);
        sounds.put(147, Sound.IMITATE_CREEPER);
        sounds.put(148, Sound.IMITATE_ELDER_GUARDIAN);
        sounds.put(149, Sound.IMITATE_ENDER_DRAGON);
        sounds.put(150, Sound.IMITATE_ENDERMAN);
        sounds.put(152, Sound.IMITATE_EVOCATION_ILLAGER);
        sounds.put(153, Sound.IMITATE_GHAST);
        sounds.put(154, Sound.IMITATE_HUSK);
        sounds.put(155, Sound.IMITATE_ILLUSION_ILLAGER);
        sounds.put(156, Sound.IMITATE_MAGMA_CUBE);
        sounds.put(157, Sound.IMITATE_POLAR_BEAR);
        sounds.put(158, Sound.IMITATE_SHULKER);
        sounds.put(159, Sound.IMITATE_SILVERFISH);
        sounds.put(160, Sound.IMITATE_SKELETON);
        sounds.put(161, Sound.IMITATE_SLIME);
        sounds.put(162, Sound.IMITATE_SPIDER);
        sounds.put(163, Sound.IMITATE_STRAY);
        sounds.put(164, Sound.IMITATE_VEX);
        sounds.put(165, Sound.IMITATE_VINDICATION_ILLAGER);
        sounds.put(166, Sound.IMITATE_WITCH);
        sounds.put(167, Sound.IMITATE_WITHER);
        sounds.put(168, Sound.IMITATE_WITHER_SKELETON);
        sounds.put(169, Sound.IMITATE_WOLF);
        sounds.put(170, Sound.IMITATE_ZOMBIE);
        sounds.put(171, Sound.IMITATE_ZOMBIE_PIGMAN);
        sounds.put(172, Sound.IMITATE_ZOMBIE_VILLAGER);
        sounds.put(173, Sound.BLOCK_END_PORTAL_FRAME_FILL);
        sounds.put(174, Sound.BLOCK_END_PORTAL_SPAWN);
        sounds.put(175, Sound.RANDOM_ANVIL_USE);
        sounds.put(176, Sound.BOTTLE_DRAGONBREATH);
        sounds.put(177, Sound.PORTAL_TRAVEL);
        sounds.put(178, Sound.ITEM_TRIDENT_HIT);
        sounds.put(179, Sound.ITEM_TRIDENT_RETURN);
        sounds.put(180, Sound.ITEM_TRIDENT_RIPTIDE_1);
        sounds.put(181, Sound.ITEM_TRIDENT_RIPTIDE_2);
        sounds.put(182, Sound.ITEM_TRIDENT_RIPTIDE_3);
        sounds.put(183, Sound.ITEM_TRIDENT_THROW);
        sounds.put(184, Sound.ITEM_TRIDENT_THUNDER);
        sounds.put(185, Sound.ITEM_TRIDENT_HIT_GROUND);
        sounds.put(186, Sound.DEFAULT);
        sounds.put(188, Sound.ELEMCONSTRUCT_OPEN);
        sounds.put(189, Sound.ICEBOMB_HIT);
        sounds.put(190, Sound.BALLOONPOP);
        sounds.put(191, Sound.LT_REACTION_ICEBOMB);
        sounds.put(192, Sound.LT_REACTION_BLEACH);
        sounds.put(193, Sound.LT_REACTION_EPASTE);
        sounds.put(194, Sound.LT_REACTION_EPASTE2);
        sounds.put(199, Sound.LT_REACTION_FERTILIZER);
        sounds.put(200, Sound.LT_REACTION_FIREBALL);
        sounds.put(201, Sound.LT_REACTION_MGSALT);
        sounds.put(202, Sound.LT_REACTION_MISCFIRE);
        sounds.put(203, Sound.LT_REACTION_FIRE);
        sounds.put(204, Sound.LT_REACTION_MISCEXPLOSION);
        sounds.put(205, Sound.LT_REACTION_MISCMYSTICAL);
        sounds.put(206, Sound.LT_REACTION_MISCMYSTICAL2);
        sounds.put(207, Sound.LT_REACTION_PRODUCT);
        sounds.put(208, Sound.SPARKLER_USE);
        sounds.put(209, Sound.GLOWSTICK_USE);
        sounds.put(210, Sound.SPARKLER_ACTIVE);
        sounds.put(211, Sound.CONVERT_TO_DROWNED);
        sounds.put(212, Sound.BUCKET_FILL_FISH);
        sounds.put(213, Sound.BUCKET_EMPTY_FISH);
        sounds.put(214, Sound.UNDEFINED);
    }

    @Override
    public void serialize(ByteBuf buffer, LevelSoundEventPacket packet) {
        buffer.writeByte(sounds.get(packet.getSound()));
        BedrockUtils.writeVector3f(buffer, packet.getPosition());
        VarInts.writeInt(buffer, packet.getExtraData());
        VarInts.writeInt(buffer, packet.getPitch());
        buffer.writeBoolean(packet.isUnknown0());
        buffer.writeBoolean(packet.isRelativeVolumeDisabled());
    }

    @Override
    public void deserialize(ByteBuf buffer, LevelSoundEventPacket packet) {
        packet.setSound(sounds.get(buffer.readUnsignedByte()));
        packet.setPosition(BedrockUtils.readVector3f(buffer));
        packet.setExtraData(VarInts.readInt(buffer));
        packet.setPitch(VarInts.readInt(buffer));
        packet.setUnknown0(buffer.readBoolean());
        packet.setRelativeVolumeDisabled(buffer.readBoolean());
    }
}
